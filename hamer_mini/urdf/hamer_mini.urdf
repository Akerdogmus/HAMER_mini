<?xml version='1.0'?>
<robot name="hamer_mini">
	
	<!-- Dummy Link -->
	<link name="dummy"/>
  	<joint name="dummy_joint" type="fixed">
     		<parent link="dummy"/>
     		<child link="base_link"/>
   	</joint> 

	<!-- Base Link -->
	<link name="base_link">
	 	<visual>
		   <origin xyz="-0.0011104 0.25501 -0.065" rpy="0 0 0" />
		   <geometry>
			 <!--<box size="0.255 0.150 0.04"/> -->
			<mesh filename="package://hamer_mini/meshes/Stl/base_link.STL"/>
		   </geometry>
		   <material name="blue">
		      <color rgba="0 0.5 1 1"/>
		   </material>
		</visual>
		<!-- Base Collision -->
		<collision>
		   <origin xyz="0 0 0" rpy="0 0 0" />
		   <geometry>
			<box size="0.255 0.150 0.04"/>
		   </geometry>
		</collision>
		<!-- Base Inertial Elements -->
		<inertial>
		   <mass value="0.5"/>
		   <inertia ixx="0.002776" ixy="0.0" ixz="0.0"
			    iyy="0.003647" iyz="0.0" izz="0.001004"/>
		</inertial>
	</link>
	
	<!-- Laser Platform -->
	<link name="laser_platform_link">
	 	<visual>
		   <origin xyz="0 0 0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.04" radius="0.01" />
		   </geometry>
		   <material name="blue">
		      <color rgba="0 0.5 1 1"/>
		   </material>
		</visual>
		<!-- Base Collision -->
		<collision>
		   <origin xyz="0 0 0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.04" radius="0.01" />
		   </geometry>
		</collision>
		<!-- Base Inertial Elements -->
		<inertial>
		   <mass value="0.01"/>
		   <inertia ixx="0.0" ixy="0.0" ixz="0.0"
			    iyy="0.0" iyz="0.0" izz="0.0"/>
		</inertial>
	</link>

	<joint name="joint_laser_platform_link" type="fixed">
	   <parent link="base_link"/>
	   <child link="laser_platform_link"/>
	   <origin xyz="-0.05 0 0.04" rpy="0 0 0" />
	   <axis xyz="0 1 0"/>
	</joint>

	<!-- Right Back Wheel -->
	<link name="right_back_wheel">
	 	<visual>
		   <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<mesh filename="package://hamer_mini/meshes/Stl/right_back_wheel.STL"/>
			<!-- <cylinder length="0.026" radius="0.0325" /> -->
		   </geometry>
		   <material name="black">
		      <color rgba="0.05 0.05 0.05 1"/>
		   </material>
		</visual>
		<!-- Right Back Wheel Collision -->
		<collision>
		   <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.026" radius="0.0325" />
		   </geometry>
		</collision>
		<!-- Right Back Wheel Inertial Elements -->
		<inertial>
		   <!--<origin xyz="-0.06 -0.076 0.011" rpy="0 0 0" />-->
		   <mass value="0.01"/>
		   <inertia ixx="0.000003204" ixy="0.0" ixz="0.0"
			    iyy="0.000003204" iyz="0.0" izz="0.00005281"/>
		</inertial>
	</link>

	<joint name="joint_right_back_wheel" type="continuous">
	   <parent link="base_link"/>
	   <child link="right_back_wheel"/>
	   <origin xyz="-0.06 -0.08 0.011" rpy="0 0 0" />
	   <axis xyz="0 1 0"/>
	</joint>

	<!-- Right Front Wheel -->
	<link name="right_front_wheel">
	 	<visual>
		   <origin xyz="-0.0 0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<mesh filename="package://hamer_mini/meshes/Stl/right_front_wheel.STL"/>
			<!-- <cylinder length="0.026" radius="0.0325" /> -->
		   </geometry>
		   <material name="black">
		      <color rgba="0.05 0.05 0.05 1"/>
		   </material>
		</visual>
		<!-- Right Front Wheel Collision -->
		<collision>
		   <origin xyz="-0.0 0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.026" radius="0.0325" />
		   </geometry>
		</collision>
		<!-- Right Front Wheel Inertial Elements -->
		<inertial>
		   <!--<origin xyz="0.06 -0.076 0.011" rpy="0 0 0" />-->
		   <mass value="0.01"/>
		   <inertia ixx="0.000003204" ixy="0.0" ixz="0.0"
			    iyy="0.000003204" iyz="0.0" izz="0.00005281"/>
		</inertial>
	</link>

	<joint name="joint_right_front_wheel" type="continuous">
	   <parent link="base_link"/>
	   <child link="right_front_wheel"/>
	   <origin xyz="0.06 -0.08 0.011" rpy="0 0 0" />
	   <axis xyz="0 1 0"/>
	</joint>

	<!-- Left Back Wheel -->
	<link name="left_back_wheel">
	 	<visual>
		   <origin xyz="0.0 -0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<mesh filename="package://hamer_mini/meshes/Stl/left_back_wheel.STL"/>
			<!-- <cylinder length="0.026" radius="0.0325" /> -->
		   </geometry>
		   <material name="black">
		      <color rgba="0.05 0.05 0.05 1"/>
		   </material>
		</visual>
		<!-- Left Back Wheel Collision -->
		<collision>
		   <origin xyz="0.0 -0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.026" radius="0.0325" />
		   </geometry>
		</collision>
		<!-- Left Back Wheel Inertial Elements -->
		<inertial>
		   <!--<origin xyz="-0.06 0.076 0.011" rpy="0 0 0" />-->
		   <mass value="0.01"/>
		   <inertia ixx="0.000003204" ixy="0.0" ixz="0.0"
			    iyy="0.000003204" iyz="0.0" izz="0.00005281"/>
		</inertial>
	</link>

	<joint name="joint_left_back_wheel" type="continuous">
	   <parent link="base_link"/>
	   <child link="left_back_wheel"/>
	   <origin xyz="-0.06 0.08 0.011" rpy="0 0 0" />
	   <axis xyz="0 1 0"/>
	</joint>

	<!-- Left Front Wheel -->
	<link name="left_front_wheel">
	 	<visual>
		   <origin xyz="-0.0 -0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<mesh filename="package://hamer_mini/meshes/Stl/left_front_wheel.STL"/>
			<!--<cylinder length="0.026" radius="0.0325" /> -->
		   </geometry>
		   <material name="black">
		      <color rgba="0.05 0.05 0.05 1"/>
		   </material>
		</visual>
		<!-- Left Front Wheel Collision -->
		<collision>
		   <origin xyz="-0.0 -0.0 0.0" rpy="0 0 0" />
		   <geometry>
			<cylinder length="0.026" radius="0.0325" />
		   </geometry>
		</collision>
		<!--Left Front Wheel Inertial Elements -->
		<inertial>
		   <!--<origin xyz="0.06 0.076 0.011" rpy="0 0 0" />-->
		   <mass value="0.01"/>
		   <inertia ixx="0.000003204" ixy="0.0" ixz="0.0"
			    iyy="0.000003204" iyz="0.0" izz="0.00005281"/>
		</inertial>
	</link>

	<joint name="joint_left_front_wheel" type="continuous">
	   <parent link="base_link"/>
	   <child link="left_front_wheel"/>
	   <origin xyz="0.06 0.08 0.011" rpy="0 0 0" />
	   <axis xyz="0 1 0"/>
	</joint>

	<!-- Gazebo references -->
	<gazebo reference="base_link">
	   <material>Gazebo/Blue</material>
	</gazebo>
	<gazebo reference="right_front_wheel">
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <mu1>1.0</mu1>
	    <mu2>1.0</mu2>
	    <maxVel>1.0</maxVel>
	    <minDepth>0.00</minDepth>
	   <material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="right_back_wheel">
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <mu1>1.0</mu1>
	    <mu2>1.0</mu2>
	    <maxVel>1.0</maxVel>
	    <minDepth>0.00</minDepth>
	   <material>Gazebo/Black</material>	
	</gazebo>
	<gazebo reference="left_front_wheel">
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <mu1>1.0</mu1>
	    <mu2>1.0</mu2>
	    <maxVel>1.0</maxVel>
	    <minDepth>0.00</minDepth>
	   <material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="left_back_wheel">
	    <kp>1000000.0</kp>
	    <kd>100.0</kd>
	    <mu1>1.0</mu1>
	    <mu2>1.0</mu2>
	    <maxVel>1.0</maxVel>
	    <minDepth>0.00</minDepth>
	   <material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="camera_link">
	   <material>Gazebo/Black</material>
	</gazebo>
	<gazebo reference="laser_platform_link">
	   <material>Gazebo/Blue</material>
	</gazebo>
	<gazebo reference="tfmini_link">
	   <material>Gazebo/Red</material>
	</gazebo>

	<!-- Ultrasonic Sonar Sensors Links -->

	 <link name="sonar_back">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</visual> 
		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="sonar_back_joint" type="fixed">
		<axis xyz="0 0 0" />
		<origin xyz="-0.1275 0 0.01" rpy="0 3.14 0"/>
		<parent link="base_link"/>
		<child link="sonar_back"/>
	</joint> 	

	<!-- Front-Left/Right Sonars -->
	<link name="sonar_left">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</visual> 
		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="sonar_left_joint" type="fixed">
		<axis xyz="0 0 0" />
		<origin xyz="0.1275 0.075 0.01" rpy="0 0 0.785"/>
		<parent link="base_link"/>
		<child link="sonar_left"/>
	</joint>	

	<link name="sonar_right">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.001 0.001 0.001"/>
			</geometry>
		</visual> 
		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="sonar_right_joint" type="fixed">
		<axis xyz="0 0 0" />
		<origin xyz="0.1275 -0.075 0.01" rpy="0 0 -0.785"/>
		<parent link="base_link"/>
		<child link="sonar_right"/>
	</joint>

	<!-- Ultrasonic Sonar Sensors Gazebo Ref. -->

	<!-- Sonar Back -->
	<gazebo reference="sonar_back">
		<material>Gazebo/Green</material>
		<sensor type="ray" name="sonar_back">
		  <pose>0 0 0 0 0 0</pose>
		  <update_rate>5</update_rate>
		  <ray>
		    <scan>
		      <horizontal>
		        <samples>5</samples>
		        <resolution>1.0</resolution>
		        <min_angle>-0.03</min_angle>
		        <max_angle>0.03</max_angle>
		      </horizontal>
		      <vertical>
		        <samples>5</samples>
		        <resolution>1</resolution>
		        <min_angle>-0.03</min_angle>
		        <max_angle>0.03</max_angle>
		      </vertical>
		    </scan>
		    <range>
		      <min>0.01</min>
		      <max>0.9</max>
		      <resolution>0.01</resolution>
		    </range>
		  </ray>
		  <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
		    <gaussianNoise>0.005</gaussianNoise>
		    <alwaysOn>true</alwaysOn>
		    <updateRate>5</updateRate>
		    <topicName>sonar_back</topicName>
		    <frameName>sonar_back</frameName>
		    <fov>0.7</fov>
		    <radiation>ultrasound</radiation>
		  </plugin>
		</sensor>
	</gazebo> 
	
	
	<gazebo reference="sonar_left">
		<material>Gazebo/Green</material>
		<sensor type="ray" name="sonar_left">
		  <pose>0 0 0 0 0 0</pose>
		  <update_rate>5</update_rate>
		  <ray>
		    <scan>
		      <horizontal>
		        <samples>5</samples>
		        <resolution>1.0</resolution>
		        <min_angle>-0.2</min_angle>
		        <max_angle>0.2</max_angle>
		      </horizontal>
		      <vertical>
		        <samples>5</samples>
		        <resolution>1</resolution>
		        <min_angle>-0.03</min_angle>
		        <max_angle>0.03</max_angle>
		      </vertical>
		    </scan>
		    <range>
		      <min>0.01</min>
		      <max>0.9</max>
		      <resolution>0.01</resolution>
		    </range>
		  </ray>
		  <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
		    <gaussianNoise>0.005</gaussianNoise>
		    <alwaysOn>true</alwaysOn>
		    <updateRate>5</updateRate>
		    <topicName>sonar_left</topicName>
		    <frameName>sonar_left</frameName>
		    <fov>0.7</fov>
		    <radiation>ultrasound</radiation>
		  </plugin>
		</sensor>
	</gazebo>

	<gazebo reference="sonar_right">
		<material>Gazebo/Green</material>
		<sensor type="ray" name="sonar_right">
		  <pose>0 0 0 0 0 0</pose>
		  <update_rate>5</update_rate>
		  <ray>
		    <scan>
		      <horizontal>
		        <samples>5</samples>
		        <resolution>1.0</resolution>
		        <min_angle>-0.03</min_angle>
		        <max_angle>0.03</max_angle>
		      </horizontal>
		      <vertical>
		        <samples>5</samples>
		        <resolution>1</resolution>
		        <min_angle>-0.03</min_angle>
		        <max_angle>0.03</max_angle>
		      </vertical>
		    </scan>
		    <range>
		      <min>0.01</min>
		      <max>0.9</max>
		      <resolution>0.01</resolution>
		    </range>
		  </ray>
		  <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
		    <gaussianNoise>0.005</gaussianNoise>
		    <alwaysOn>true</alwaysOn>
		    <updateRate>5</updateRate>
		    <topicName>sonar_right</topicName>
		    <frameName>sonar_right</frameName>
		    <fov>0.7</fov>
		    <radiation>ultrasound</radiation>
		  </plugin>
		</sensor>
	</gazebo>

	<!-- Skid Steering Drive Plugini (optional) -->
	<gazebo>
	  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
	    <updateRate>100.0</updateRate>
	    <robotNamespace>hamer_mini</robotNamespace>
	    <leftFrontJoint>joint_left_front_wheel</leftFrontJoint>
	    <rightFrontJoint>joint_right_front_wheel</rightFrontJoint>
	    <leftRearJoint>joint_left_back_wheel</leftRearJoint>
	    <rightRearJoint>joint_right_back_wheel</rightRearJoint>
	    <wheelSeparation>0.4</wheelSeparation>
	    <wheelDiameter>0.215</wheelDiameter>
	    <robotBaseFrame>base_link</robotBaseFrame>
	    <MaxForce>5.0</MaxForce>
	    <torque>20</torque>
	    <commandTopic>cmd_vel</commandTopic>
	    <odometryTopic>odom</odometryTopic>
	    <odometryFrame>odom</odometryFrame>
	    <broadcastTF>1</broadcastTF>
	  </plugin>
	</gazebo>

	<!-- Test tfmini Lidar -->
	<link name="tfmini_link">
	  <collision>
	    <origin xyz="0 0 0" rpy="0 0 0"/>
	    <geometry>
	  	<box size="0.042 0.015 0.016"/>
	    </geometry>
	  </collision>
	  <visual>
	    <origin xyz="0 0 0" rpy="0 0 0"/>
	    <geometry>
	  	<box size="0.015 0.042 0.016"/>
	    </geometry>
	  </visual>
	</link>

	<joint name="tfmini_joint" type="fixed">
	  <axis xyz="0 1 0" />
	  <origin xyz="-0.05 0 0.07" rpy="0 0 0"/>
	  <parent link="base_link"/>
	  <child link="tfmini_link"/>
	</joint>	

	<gazebo reference="tfmini_link">
	    <sensor type="ray" name="tfmini_lidar_sensor">
	      <pose>0 0 0 0 0 0</pose>
	      <visualize>true</visualize>
	      <update_rate>40</update_rate>
	      <ray>
		<scan>
		  <horizontal>
		    <samples>240</samples>
		    <resolution>1</resolution>
		    <min_angle>-0.401425728</min_angle> <!--360 dereceden 2.3 dereceye cevrildi -->
		    <max_angle>0.401425728</max_angle>
		  </horizontal>
		</scan>
		<range>
		  <min>0.3</min>
		  <max>5.0</max>
		  <resolution>0.01</resolution>
		</range>
		<noise>
		  <type>gaussian</type>
		  <mean>0.0</mean>
		  <stddev>0.01</stddev>
		</noise>
	      </ray>
	      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
		<topicName>/hamer_mini/laser/scan</topicName>
		<frameName>tfmini_link</frameName>
	      </plugin>
	    </sensor>
  	</gazebo>
	<!-- Test Camera Plugin and Link -->
	  <joint name="camera_joint" type="fixed">
	    <axis xyz="0 1 0" />
	    <origin xyz="0.1275 0 0.028" rpy="0 0 0"/>
	    <parent link="base_link"/>
	    <child link="camera_link"/>
	  </joint>

	  <link name="camera_link">
	    <collision>
	      <origin xyz="0 0 0" rpy="0 0 0"/>
	      <geometry>
	    <box size="0.02 0.05 0.015"/>
	      </geometry>
	    </collision>

	    <visual>
	      <origin xyz="0 0 0" rpy="1.57 0 1.57"/>
	      <geometry>
	    	<mesh filename="package://hamer_mini/meshes/Stl/Intel_RealSense_Depth_Camera_D435.stl" scale="0.00105 0.00105 0.00105"/> 
		<!--<box size="0.02 0.05 0.015"/> -->
	      </geometry>
	      <material name="red"/>
	    </visual>

	    <inertial>
	      <mass value="1e-5" />
	      <origin xyz="0 0 0" rpy="0 0 0"/>
	      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
	    </inertial>
	  </link>

	  <gazebo reference="camera_link">
	    <sensor type="camera" name="camera1">
	      <update_rate>30.0</update_rate>
	      <camera name="head">
		<horizontal_fov>1.3962634</horizontal_fov>
		<image>
		  <width>800</width>
		  <height>800</height>
		  <format>R8G8B8</format>
		</image>
		<clip>
		  <near>0.02</near>
		  <far>300</far>
		</clip>
		<noise>
		  <type>gaussian</type>
		  <!-- Noise is sampled independently per pixel on each frame.
		       That pixel's noise value is added to each of its color
		       channels, which at that point lie in the range [0,1]. -->
		  <mean>0.0</mean>
		  <stddev>0.007</stddev>
		</noise>
	      </camera>
	      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
		<alwaysOn>true</alwaysOn>
		<updateRate>0.0</updateRate>
		<cameraName>hamer_mini/camera1</cameraName>
		<imageTopicName>image_raw</imageTopicName>
		<cameraInfoTopicName>camera_info</cameraInfoTopicName>
		<frameName>camera_link</frameName>
		<hackBaseline>0.07</hackBaseline>
		<distortionK1>0.0</distortionK1>
		<distortionK2>0.0</distortionK2>
		<distortionK3>0.0</distortionK3>
		<distortionT1>0.0</distortionT1>
		<distortionT2>0.0</distortionT2>
	      </plugin>
	    </sensor>
	  </gazebo>

</robot> 
